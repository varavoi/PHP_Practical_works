Ответьте на вопросы:
1. Что такое ассоциативный массив?
Начнем с того, что массив - это контейнер данных(переменных).Данные массива(переменные) могут быть либо однотипны, либо разных типов, например:
$arr = [1,44,5,6] - массивы данных одного типа
$arr = [12,"str",true,2.5] - массивы данных разных типов
При создании обычного массива, для его дальнейшего перебора, элементам автоматически задаются индексы целочисленного типа, от 0-я и далее, например:
для массива $arr = [1,44,5,6], если мы хотим получать первый элемент, тогда мы обращаемя к массиву следующим образом $arr[0].
Ассоциативный массив отличается от обычного тем, что в качестве индексов для перебора выступают ключи, которые при инициализации массива
задаем сами, тип индексов(ключей) ассоциативных массивов по сравнению с индексами обычного массива могут быть разными, например:
$arrAssoc = [
    0=>12,
    1=>2,
    3=>4
] или же
$arrAssoc = [
    "num"=>12,
    "str"=>"hello",
    "bool"=>true
]

2. Как перебрать ассоциативный массив?
Ассоциативный массив можно перебрать с помощью цикла foreach
$arrAssoc = [
    "num"=>12,
    "str"=>"hello",
    "bool"=>true
]
foreach($arrAssoc as $key=>$value){
    echo $key:$value."<br>";
}

3. Как функции в php видят переменные, созданные вне функции?
Переменные, объявленные вне функции, не доступны для функции и не видимы для нее. 
Чтобы доступ к этим переменным был возможен, их нужно передавать в функцию в качестве аргументов. например:
$a = 5;
function add(){
    $a +=2; //выдаст ошибку, что $a неопределена
}
function add($a){
    $a +=2; //в этом случае увидит переменную $a, возьмет ее копию, и увеличит внутри функции на 2
}

4. Что по умолчанию передается в качестве аргумента в функцию? копия или по ссылке?
По умолчанию в качестве аргумента в функцию передается копия переменной.
$a = 5;
function add($a){
    $a +=2; 
    echo $a;//$a=7
} 
add($a)
echo $a;//$a=5 

5. Как задать передачу параметра по ссылке?
Чтобы задать передачу параметра по ссылке, при объявлении функции, перед параметром, которого хотим передать по ссылке надо поставить знак &
Например:
$a = 5;
function add(&$a){
    $a +=2; 
    echo $a;//$a=7
} 
add($a)
echo $a;//$a=7

6. Что такое global и $GLOBALS?
С помощью global мы получаем доступ к глобальным переменным, например внутри функции без необходимости передавать параметров по ссылке.
Допустим мы объявили и инициализировали переменные $a = 5;$b = 4;
и мы хотим получить доступ к этим переменным внутри функции, у которого нет параметры, например
function add(){
    $с = $a+$b; 
}
Чтобы получить доступ к глобальным переменным $a и $b, мы должны переписать нашу функцию следующим образом
function add(){
    global $a, $b;
    $с = $a+$b; 
}
$GLOBALS же - это суперглобальный массив, в котором хранятся все когда-либо созданные переменные, чтобы 
получить доступ к глобальным переменным $a и $b, наша функция будет выглядеть следующим образом
function add(){
    $с = $GLOBALS['a']+$GLOBALS['b']; 
}

7. Что такое суперглобальный массив?
Суперглобальные массивы называются так потому, что они существуют не на уровне отдельного скрипта, а на уровне всего сервера. 
К ним можно обратиться в любом месте программы, в том числе, внутри функций и методов.

8. Что такое методы GET и POST? 
Метод GET используется для получения ресурса или страницы из веб-сервера. 
Он передает данные в URL-адресе запроса, и они видимы для любого пользователя. 
Поэтому этот метод используется для отправки малых данных.

Метод POST используется для отправки данных на сервер. Он передает данные в теле запроса, и они не видны для пользователя. 
Этот метод используется для отправки больших данных.

9. Где хранится информация переданная запросом GET?
В случае HTTP-запроса методом GET, информация передается в URL-адресе на сервер. 
Браузер создает строку запроса, добавляя данные к URL после знака вопроса (?).
 Например, если вы отправляете запрос на сервер с URL-адресом `https://example.com/search?query=hello&page=2`, 
 то данные (query=hello, page=2) передаются в запросе методом GET.

На сервере эти данные доступны в виде массива $_GET. 
Например, если вы отправляете параметры query и page, то на сервере вы можете получить доступ к этим данным следующим образом:
$query = $_GET['query'];
$page = isset($_GET['page']) ? $_GET['page'] : 1;

10. Что такое функция isset?
Функция `isset`  используется для проверки существования переменной. 
Она возвращает `true`, если переменная определена и имеет ненулевое значение,
в противном случае возвращает `false`.
Пример использования функции `isset`:
$myVar = 5;
if (isset($myVar)) {
    echo "Переменная существует и не равна нулю";
} else {
    echo "Переменная не существует или равна нулю";
}


11. Для чего создается переменная с помощью static?
Ключевое слово `static`  используется для определения статических свойств и методов в классе.
 Когда переменная объявлена как статическая, она принадлежит классу,
  а не объекту, и может быть обращена к ней напрямую через имя класса, без необходимости создания экземпляра класса.

Статические переменные обладают следующими особенностями:
1. Они инициализируются только один раз во время выполнения программы.
2. Они не могут быть доступны через объект класса (хотя они могут быть доступны из статического метода).
3. Они попрежнему видны внутри методов объекта, но при их использовании следует понимать,
 что они относятся к классу, а не к конкретному объекту.
 
